#the version of docker compose syntax
version: "3.3"


services:
  #name of the service
  app:
    
    #building docker file inside current directory
    build:
      context: .
      #if we're running using docker compose for requirements.dev.txt
      args:
        - DEV=true

    #maps port 8000 to port 8000 inside the container
    #this is how we access the network when we want to connect to our server
    ports:
      - "8000:8000"

    #mapping directories from system to container
    #the updates will be reflected in the running container in real time
    volumes:
      - ./app:/app
      - dev-static-data:/vol/web

    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    
    #set configuration values for the database connection.
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
      - DEBUG=1

    #ensure that the "db" service starts before this service.
    depends_on:
      - db

  db:
    #define a Docker container for a PostgreSQL database 
    #using the official "postgres" image
    image: postgres:13-alpine

    #save the database data in a separate place, 
    #so it doesn't get lost when the container is restarted.
    volumes:
      - dev-db-data:/var/lib/postgresql/data

    #Set environment variables for the PostgreSQL database name, username, and password.
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme

#create a storage location for the database data to be saved between container restarts.
volumes:
  dev-db-data:
  dev-static-data:
